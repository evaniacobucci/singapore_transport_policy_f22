full_sample$`7.) How often do you use a bicycle as a mode of transportation?` <- fct_relevel(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`8.) How often do you use walking as a mode of transportation?` <- fct_relevel(full_sample$`8.) How often do you use walking as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
# Age should be numeric, I think
full_sample$`9.) What is your age in years?` <- as.character(full_sample$`9.) What is your age in years?`) # This makes it so that the as.numeric() below takes the number for age. Otherwise, it takes the factor level assigned in the above code.
full_sample$`9.) What is your age in years?` <- as.numeric(full_sample$`9.) What is your age in years?`)
# Reduce the race/ethnicity categories
full_sample$`12.) Which best describes your race/ethnicity?`[full_sample$`12.) Which best describes your race/ethnicity?`!="Chinese"] <- "Other"
# All right, let's compare some groups. (Basically, do all the 12 demographic/characteristic questions at the end by treatment/control).
sample_comparison <- compareGroups(Group ~ `1.) Do you have a driving license?` + `2.) Do you own a car?` + `3.) Do you have regular access to a car?` + `4.) How often do you use mass rapid transit as a mode of transportation?` + `5.) How often do you use a car as a mode of transportation?` + `6.) How often do you use a bus as a mode of transportation?` + `7.) How often do you use a bicycle as a mode of transportation?` + `8.) How often do you use walking as a mode of transportation?` + `9.) What is your age in years?` + `10.) What is your approximate annual income in Singapore dollars?` + `11.) Do you identify as` + `12.) Which best describes your race/ethnicity?`, data = full_sample, max.xlev = 30, byrow = FALSE, simplify = FALSE) # "simplify = FALSE" is the argument to tell it to still print factor levels with no obs
# It removes income for now, probably because there's so much variation in what is written there and so many are missing.
sample_comparison_table <- createTable(sample_comparison)
export2md(sample_comparison_table, file = 'sample_comparison_table.md', caption = "Group Comparison")
export2xls(sample_comparison_table, file='./output/sample_comparison.xlsx', which.table="descr", nmax=TRUE, header.labels=c())
control$Group <- "Control"
treatment$Group <- "Treatment"
# You might need to make those a factor. Ezpz.
names_control <- names(control)
names_treatment <- names(treatment)
different_names <- setdiff(names_control, names_treatment) # Shows what is in the first that isn't in the second
different_names
# OK, the names are too different to just rbind them at the moment. There are differences in capitalization, etc. But, if they actually are the same columns, then I can just copy and paste the names from one to the other and it won't make no nevermind, then I can combine them. They ARE both the same length... 171 variables.
vertical_names <- cbind(names_control, names_treatment)
# They appear to be the same, just orthographic differences. The columns we'd be doing demographic calculations on are the same for sure. I'll check again tomorrow, but until then:
names(treatment) <- names(control)
full_sample <- rbind(control, treatment)
# Some Manual Renaming... can move later:
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[159:171])
colnames(full_sample)[169] <- "11.) Do you identify as" # The brackets need to be outside the parentheses
# Fixing responses to be the same, e.g., capitalization, etc.
# You should rewrite this process as a function later, like you did for the SOII project
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`[which(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`5.) How often do you use a car as a mode of transportation?`[which(full_sample$`5.) How often do you use a car as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`6.) How often do you use a bus as a mode of transportation?`[which(full_sample$`6.) How often do you use a bus as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`8.) How often do you use walking as a mode of transportation?`[which(full_sample$`8.) How often do you use walking as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Female/woman")] <- "Female/Woman"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Male/man")] <- "Male/Man"
# I suppose this is an easier way to do it
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years", 22)
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years old", 22)
# OK, just a couple more
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="filipino", "Filipino")
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="Option 4", "Other")
# Make the group variable a factor for comparison purposes
full_sample$Group <- as_factor(full_sample$Group) # Not sure if this is actually needed
# Reorder the frequency questions
full_sample[159:170] <- lapply(full_sample[159:170], as_factor) # Convert them to factors so we can reorder. I didn't reorder the race/ethnicity so the unused levels don't show up in the descriptive table
# Add additional level to those missing a level (e.g., some people never picked "neveR")
levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`) <- c(levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`), "Never")
levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`) <- c(levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`), "Never")
levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`) <- c(levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`), "Almost all the time")
levels(full_sample$`8.) How often do you use walking as a mode of transportation?`) <- c(levels(full_sample$`8.) How often do you use walking as a mode of transportation?`), "Never")
# Specify the order of the levels (there are only four, so I'll just rewrite them:
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?` <- fct_relevel(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`5.) How often do you use a car as a mode of transportation?` <- fct_relevel(full_sample$`5.) How often do you use a car as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`6.) How often do you use a bus as a mode of transportation?` <- fct_relevel(full_sample$`6.) How often do you use a bus as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`7.) How often do you use a bicycle as a mode of transportation?` <- fct_relevel(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`8.) How often do you use walking as a mode of transportation?` <- fct_relevel(full_sample$`8.) How often do you use walking as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
# Age should be numeric, I think
full_sample$`9.) What is your age in years?` <- as.character(full_sample$`9.) What is your age in years?`) # This makes it so that the as.numeric() below takes the number for age. Otherwise, it takes the factor level assigned in the above code.
full_sample$`9.) What is your age in years?` <- as.numeric(full_sample$`9.) What is your age in years?`)
# Reduce the race/ethnicity categories
full_sample$`12.) Which best describes your race/ethnicity?`[full_sample$`12.) Which best describes your race/ethnicity?`!="Chinese"] <- "Other"
# All right, let's compare some groups. (Basically, do all the 12 demographic/characteristic questions at the end by treatment/control).
sample_comparison <- compareGroups(Group ~ `1.) Do you have a driving license?` + `2.) Do you own a car?` + `3.) Do you have regular access to a car?` + `4.) How often do you use mass rapid transit as a mode of transportation?` + `5.) How often do you use a car as a mode of transportation?` + `6.) How often do you use a bus as a mode of transportation?` + `7.) How often do you use a bicycle as a mode of transportation?` + `8.) How often do you use walking as a mode of transportation?` + `9.) What is your age in years?` + `10.) What is your approximate annual income in Singapore dollars?` + `11.) Do you identify as` + `12.) Which best describes your race/ethnicity?`, data = full_sample, max.xlev = 30, byrow = FALSE, simplify = FALSE) # "simplify = FALSE" is the argument to tell it to still print factor levels with no obs
# It removes income for now, probably because there's so much variation in what is written there and so many are missing.
sample_comparison_table <- createTable(sample_comparison)
export2md(sample_comparison_table, file = 'sample_comparison_table.md', caption = "Group Comparison")
export2xls(sample_comparison_table, file='./output/sample_comparison.xlsx', which.table="descr", nmax=TRUE, header.labels=c())
names(full_sample[159:170])
class(full_sample$`12.) Which best describes your race/ethnicity?`)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("compareGroups")
control <- read_csv("./data/control.csv")
treatment <- read_csv("./data/treatment.csv")
control$Group <- "Control"
treatment$Group <- "Treatment"
# You might need to make those a factor. Ezpz.
names_control <- names(control)
names_treatment <- names(treatment)
different_names <- setdiff(names_control, names_treatment) # Shows what is in the first that isn't in the second
different_names
# OK, the names are too different to just rbind them at the moment. There are differences in capitalization, etc. But, if they actually are the same columns, then I can just copy and paste the names from one to the other and it won't make no nevermind, then I can combine them. They ARE both the same length... 171 variables.
vertical_names <- cbind(names_control, names_treatment)
# They appear to be the same, just orthographic differences. The columns we'd be doing demographic calculations on are the same for sure. I'll check again tomorrow, but until then:
names(treatment) <- names(control)
full_sample <- rbind(control, treatment)
# Some Manual Renaming... can move later:
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[159:171])
colnames(full_sample)[169] <- "11.) Do you identify as" # The brackets need to be outside the parentheses
# Fixing responses to be the same, e.g., capitalization, etc.
# You should rewrite this process as a function later, like you did for the SOII project
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`[which(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`5.) How often do you use a car as a mode of transportation?`[which(full_sample$`5.) How often do you use a car as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`6.) How often do you use a bus as a mode of transportation?`[which(full_sample$`6.) How often do you use a bus as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`8.) How often do you use walking as a mode of transportation?`[which(full_sample$`8.) How often do you use walking as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Female/woman")] <- "Female/Woman"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Male/man")] <- "Male/Man"
# I suppose this is an easier way to do it
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years", 22)
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years old", 22)
# OK, just a couple more
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="filipino", "Filipino")
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="Option 4", "Other")
# Make the group variable a factor for comparison purposes
full_sample$Group <- as_factor(full_sample$Group) # Not sure if this is actually needed
# Reorder the frequency questions
full_sample[159:170] <- lapply(full_sample[159:170], as_factor) # Convert them to factors so we can reorder. I didn't reorder the race/ethnicity so the unused levels don't show up in the descriptive table
# Add additional level to those missing a level (e.g., some people never picked "neveR")
levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`) <- c(levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`), "Never")
levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`) <- c(levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`), "Never")
levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`) <- c(levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`), "Almost all the time")
levels(full_sample$`8.) How often do you use walking as a mode of transportation?`) <- c(levels(full_sample$`8.) How often do you use walking as a mode of transportation?`), "Never")
# Specify the order of the levels (there are only four, so I'll just rewrite them:
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?` <- fct_relevel(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`5.) How often do you use a car as a mode of transportation?` <- fct_relevel(full_sample$`5.) How often do you use a car as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`6.) How often do you use a bus as a mode of transportation?` <- fct_relevel(full_sample$`6.) How often do you use a bus as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`7.) How often do you use a bicycle as a mode of transportation?` <- fct_relevel(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`8.) How often do you use walking as a mode of transportation?` <- fct_relevel(full_sample$`8.) How often do you use walking as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
# Age should be numeric, I think
full_sample$`9.) What is your age in years?` <- as.character(full_sample$`9.) What is your age in years?`) # This makes it so that the as.numeric() below takes the number for age. Otherwise, it takes the factor level assigned in the above code.
full_sample$`9.) What is your age in years?` <- as.numeric(full_sample$`9.) What is your age in years?`)
# Reduce the race/ethnicity categories
full_sample$`12.) Which best describes your race/ethnicity?`[full_sample$`12.) Which best describes your race/ethnicity?`!="Chinese"] <- "Other"
# All right, let's compare some groups. (Basically, do all the 12 demographic/characteristic questions at the end by treatment/control).
sample_comparison <- compareGroups(Group ~ `1.) Do you have a driving license?` + `2.) Do you own a car?` + `3.) Do you have regular access to a car?` + `4.) How often do you use mass rapid transit as a mode of transportation?` + `5.) How often do you use a car as a mode of transportation?` + `6.) How often do you use a bus as a mode of transportation?` + `7.) How often do you use a bicycle as a mode of transportation?` + `8.) How often do you use walking as a mode of transportation?` + `9.) What is your age in years?` + `10.) What is your approximate annual income in Singapore dollars?` + `11.) Do you identify as` + `12.) Which best describes your race/ethnicity?`, data = full_sample, max.xlev = 30, byrow = FALSE, simplify = FALSE) # "simplify = FALSE" is the argument to tell it to still print factor levels with no obs
# It removes income for now, probably because there's so much variation in what is written there and so many are missing.
sample_comparison_table <- createTable(sample_comparison)
export2md(sample_comparison_table, file = 'sample_comparison_table.md', caption = "Group Comparison")
export2xls(sample_comparison_table, file='./output/sample_comparison.xlsx', which.table="descr", nmax=TRUE, header.labels=c())
names(full_sample[159:170])
names(full_sample[159:171])
control$Group <- "Control"
treatment$Group <- "Treatment"
# You might need to make those a factor. Ezpz.
names_control <- names(control)
names_treatment <- names(treatment)
different_names <- setdiff(names_control, names_treatment) # Shows what is in the first that isn't in the second
different_names
# OK, the names are too different to just rbind them at the moment. There are differences in capitalization, etc. But, if they actually are the same columns, then I can just copy and paste the names from one to the other and it won't make no nevermind, then I can combine them. They ARE both the same length... 171 variables.
vertical_names <- cbind(names_control, names_treatment)
# They appear to be the same, just orthographic differences. The columns we'd be doing demographic calculations on are the same for sure. I'll check again tomorrow, but until then:
names(treatment) <- names(control)
full_sample <- rbind(control, treatment)
# Some Manual Renaming... can move later:
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[159:171])
colnames(full_sample)[169] <- "11.) Do you identify as" # The brackets need to be outside the parentheses
# Fixing responses to be the same, e.g., capitalization, etc.
# You should rewrite this process as a function later, like you did for the SOII project
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`[which(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`5.) How often do you use a car as a mode of transportation?`[which(full_sample$`5.) How often do you use a car as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`6.) How often do you use a bus as a mode of transportation?`[which(full_sample$`6.) How often do you use a bus as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`8.) How often do you use walking as a mode of transportation?`[which(full_sample$`8.) How often do you use walking as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Female/woman")] <- "Female/Woman"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Male/man")] <- "Male/Man"
# I suppose this is an easier way to do it
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years", 22)
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years old", 22)
# OK, just a couple more
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="filipino", "Filipino")
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="Option 4", "Other")
# Make the group variable a factor for comparison purposes
full_sample$Group <- as_factor(full_sample$Group) # Not sure if this is actually needed
# Reorder the frequency questions
full_sample[159:169] <- lapply(full_sample[159:169], as_factor) # Convert them to factors so we can reorder. I didn't reorder the race/ethnicity so the unused levels don't show up in the descriptive table
# Add additional level to those missing a level (e.g., some people never picked "neveR")
levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`) <- c(levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`), "Never")
levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`) <- c(levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`), "Never")
levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`) <- c(levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`), "Almost all the time")
levels(full_sample$`8.) How often do you use walking as a mode of transportation?`) <- c(levels(full_sample$`8.) How often do you use walking as a mode of transportation?`), "Never")
# Specify the order of the levels (there are only four, so I'll just rewrite them:
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?` <- fct_relevel(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`5.) How often do you use a car as a mode of transportation?` <- fct_relevel(full_sample$`5.) How often do you use a car as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`6.) How often do you use a bus as a mode of transportation?` <- fct_relevel(full_sample$`6.) How often do you use a bus as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`7.) How often do you use a bicycle as a mode of transportation?` <- fct_relevel(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`8.) How often do you use walking as a mode of transportation?` <- fct_relevel(full_sample$`8.) How often do you use walking as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
# Age should be numeric, I think
full_sample$`9.) What is your age in years?` <- as.character(full_sample$`9.) What is your age in years?`) # This makes it so that the as.numeric() below takes the number for age. Otherwise, it takes the factor level assigned in the above code.
full_sample$`9.) What is your age in years?` <- as.numeric(full_sample$`9.) What is your age in years?`)
# Reduce the race/ethnicity categories
full_sample$`12.) Which best describes your race/ethnicity?`[full_sample$`12.) Which best describes your race/ethnicity?`!="Chinese"] <- "Other"
# All right, let's compare some groups. (Basically, do all the 12 demographic/characteristic questions at the end by treatment/control).
sample_comparison <- compareGroups(Group ~ `1.) Do you have a driving license?` + `2.) Do you own a car?` + `3.) Do you have regular access to a car?` + `4.) How often do you use mass rapid transit as a mode of transportation?` + `5.) How often do you use a car as a mode of transportation?` + `6.) How often do you use a bus as a mode of transportation?` + `7.) How often do you use a bicycle as a mode of transportation?` + `8.) How often do you use walking as a mode of transportation?` + `9.) What is your age in years?` + `10.) What is your approximate annual income in Singapore dollars?` + `11.) Do you identify as` + `12.) Which best describes your race/ethnicity?`, data = full_sample, max.xlev = 30, byrow = FALSE, simplify = FALSE) # "simplify = FALSE" is the argument to tell it to still print factor levels with no obs
# It removes income for now, probably because there's so much variation in what is written there and so many are missing.
sample_comparison_table <- createTable(sample_comparison)
export2md(sample_comparison_table, file = 'sample_comparison_table.md', caption = "Group Comparison")
export2xls(sample_comparison_table, file='./output/sample_comparison.xlsx', which.table="descr", nmax=TRUE, header.labels=c())
table(full_sample$`10.) What is your approximate annual income in Singapore dollars?`)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("compareGroups")
deltas <- read_csv("./data/deltas.csv")
View(deltas)
ggplot(deltas, aes(x=Number, y=Ctrl))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~Policy)
ggplot(deltas, aes(x=Number, y=Ctrl))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~Policy, ncol = 1)
View(deltas)
deltas_long <- gather(deltas, key="measure", value="value", c("Ctrl", "Trmt"))
View(deltas_long)
deltas_long <- gather(deltas, key="Group", value="distance", c("Ctrl", "Trmt"))
deltas_long$Change <- NULL
ggplot(deltas, aes(x = Number, y = Distance))+
geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Distance", c("Ctrl", "Trmt"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas, aes(x = Number, y = Distance))+
geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Distance", c("Ctrl", "Trmt"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas_long, aes(x = Number, y = Distance))+
geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
View(deltas_long)
ggplot(deltas_long, aes(x = Number, y = Distance))+
geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
#  geom_bar(stat = 'identity', fill = "forest green")+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(stat = 'identity')+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(stat = 'identity')+
facet_wrap(~Policy, scales="free_y", ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(stat = 'identity')+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity')+
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Policy, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Number, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Label, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1)
ggplot(deltas_long, aes(x = Label, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Distance (Mean)", c("Control", "Treatment"))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Distance (Mean)", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas_long, aes(x = Label, y = Distance, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas_long, aes(x = Label, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
deltas_long$Concept <- factor(deltas_long$Concept, levels = deltas_long$Concept)
deltas_long$Concept
deltas_long$Concept[1:18]
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
deltas_long$Concept <- factor(deltas_long$Concept, levels = deltas_long$Concept[1:18])
ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
deltas_long$Concept <- factor(deltas_long$Concept, levels = deltas_long$Concept[1:18]) # This keeps them in the right order when plotted, otherwise ggplot will arrange them alphabetically
deltas_plot <- ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 6,
height = 5,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 8,
height = 5.5,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 8,
height = 8,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 6,
height = 6,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
deltas_plot <- ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1), legend.position = "top")
deltas_plot
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 6,
height = 6,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 7,
height = 7,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
View(deltas_long)
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
deltas_long$Concept <- factor(deltas_long$Concept, levels = deltas_long$Concept[1:18]) # This keeps them in the right order when plotted, otherwise ggplot will arrange them alphabetically
deltas_long$Policy <- factor(deltas_long$Policy, levels = deltas_long$Policy[1:3])
deltas_long$Policy
unique(deltas_long$Policy)
deltas <- read_csv("./data/deltas.csv")
deltas_long <- gather(deltas, key="Group", value="Mean Distance", c("Control", "Treatment"))
deltas_long$Change <- NULL # This doesn't make sense here, anymore, and I can get it back by subtracting
deltas_long$Concept <- factor(deltas_long$Concept, levels = deltas_long$Concept[1:18]) # This keeps them in the right order when plotted, otherwise ggplot will arrange them alphabetically
deltas_long$Policy <- factor(deltas_long$Policy, levels = unique(deltas_long$Policy))
deltas_plot <- ggplot(deltas_long, aes(x = Concept, y = `Mean Distance`, fill = Group))+
geom_bar(position = "dodge", stat = 'identity') + # Need position = "dodge" because the default makes them stacked
facet_wrap(~Policy, ncol = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1), legend.position = "top")
ggsave(
"figure3.png",
plot = deltas_plot,
device = NULL,
path = "./figs",
scale = 1,
width = 7,
height = 7,
units = "in",
dpi = 600,
limitsize = TRUE,
bg = NULL
)
deltas_plot
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("compareGroups")
control <- read_csv("./data/control.csv")
treatment <- read_csv("./data/treatment.csv")
control$Group <- "Control"
treatment$Group <- "Treatment"
names_control <- names(control)
names_treatment <- names(treatment)
different_names <- setdiff(names_control, names_treatment) # Shows what is in the first that isn't in the second
different_names
vertical_names <- cbind(names_control, names_treatment)
names(treatment) <- names(control)
full_sample <- rbind(control, treatment)
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[159:171])
colnames(full_sample)[169] <- "11.) Do you identify as" # The brackets need to be outside the parentheses
# Fixing responses to be the same, e.g., capitalization, etc.
# You should rewrite this process as a function later, like you did for the SOII project
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`[which(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`5.) How often do you use a car as a mode of transportation?`[which(full_sample$`5.) How often do you use a car as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`6.) How often do you use a bus as a mode of transportation?`[which(full_sample$`6.) How often do you use a bus as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`8.) How often do you use walking as a mode of transportation?`[which(full_sample$`8.) How often do you use walking as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Female/woman")] <- "Female/Woman"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Male/man")] <- "Male/Man"
# I suppose this is an easier way to do it
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years", 22)
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years old", 22)
# OK, just a couple more
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="filipino", "Filipino")
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="Option 4", "Other")
# Make the group variable a factor for comparison purposes
full_sample$Group <- as_factor(full_sample$Group) # Not sure if this is actually needed
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("compareGroups")
control <- read_csv("./data/control.csv")
treatment <- read_csv("./data/treatment.csv")
control$Group <- "Control"
treatment$Group <- "Treatment"
names_control <- names(control)
names_treatment <- names(treatment)
different_names <- setdiff(names_control, names_treatment) # Shows what is in the first that isn't in the second
different_names
vertical_names <- cbind(names_control, names_treatment)
names(treatment) <- names(control)
full_sample <- rbind(control, treatment)
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[155:167])
colnames(full_sample)[165] <- "11.) Do you identify as" # The brackets need to be outside the parentheses
# What are the variable names we need to include in the comparison table? (So I can write them in the compareGroups statement)
names(full_sample[155:167])
# Fixing responses to be the same, e.g., capitalization, etc.
# You should rewrite this process as a function later, like you did for the SOII project
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`[which(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`5.) How often do you use a car as a mode of transportation?`[which(full_sample$`5.) How often do you use a car as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`6.) How often do you use a bus as a mode of transportation?`[which(full_sample$`6.) How often do you use a bus as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`8.) How often do you use walking as a mode of transportation?`[which(full_sample$`8.) How often do you use walking as a mode of transportation?`=="Almost All the Time")] <- "Almost all the time"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Female/woman")] <- "Female/Woman"
full_sample$`11.) Do you identify as`[which(full_sample$`11.) Do you identify as`=="Male/man")] <- "Male/Man"
# I suppose this is an easier way to do it
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years", 22)
full_sample$`9.) What is your age in years?` <- replace(full_sample$`9.) What is your age in years?`, full_sample$`9.) What is your age in years?`=="22 years old", 22)
# OK, just a couple more
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="filipino", "Filipino")
full_sample$`12.) Which best describes your race/ethnicity?` <- replace(full_sample$`12.) Which best describes your race/ethnicity?`, full_sample$`12.) Which best describes your race/ethnicity?`=="Option 4", "Other")
# Make the group variable a factor for comparison purposes
full_sample$Group <- as_factor(full_sample$Group) # Not sure if this is actually needed
# Reorder the frequency questions
full_sample[155:165] <- lapply(full_sample[155:165], as_factor) # Convert them to factors so we can reorder. I didn't reorder the race/ethnicity so the unused levels don't show up in the descriptive table
# Add additional level to those missing a level (e.g., some people never picked "neveR")
levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`) <- c(levels(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`), "Never")
levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`) <- c(levels(full_sample$`6.) How often do you use a bus as a mode of transportation?`), "Never")
levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`) <- c(levels(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`), "Almost all the time")
levels(full_sample$`8.) How often do you use walking as a mode of transportation?`) <- c(levels(full_sample$`8.) How often do you use walking as a mode of transportation?`), "Never")
# Specify the order of the levels (there are only four questions, so I'll just rewrite them:
full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?` <- fct_relevel(full_sample$`4.) How often do you use mass rapid transit as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`5.) How often do you use a car as a mode of transportation?` <- fct_relevel(full_sample$`5.) How often do you use a car as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`6.) How often do you use a bus as a mode of transportation?` <- fct_relevel(full_sample$`6.) How often do you use a bus as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`7.) How often do you use a bicycle as a mode of transportation?` <- fct_relevel(full_sample$`7.) How often do you use a bicycle as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
full_sample$`8.) How often do you use walking as a mode of transportation?` <- fct_relevel(full_sample$`8.) How often do you use walking as a mode of transportation?`, c("Never", "Seldom", "Often", "Very Often", "Almost all the time"))
# Age should be numeric, I think
full_sample$`9.) What is your age in years?` <- as.character(full_sample$`9.) What is your age in years?`) # This makes it so that the as.numeric() below takes the number for age. Otherwise, it takes the factor level assigned in the above code.
full_sample$`9.) What is your age in years?` <- as.numeric(full_sample$`9.) What is your age in years?`)
# Reduce the race/ethnicity categories
full_sample$`12.) Which best describes your race/ethnicity?`[full_sample$`12.) Which best describes your race/ethnicity?`!="Chinese"] <- "Other"
sample_comparison <- compareGroups(Group ~ `1.) Do you have a driving license?` + `2.) Do you own a car?` + `3.) Do you have regular access to a car?` + `4.) How often do you use mass rapid transit as a mode of transportation?` + `5.) How often do you use a car as a mode of transportation?` + `6.) How often do you use a bus as a mode of transportation?` + `7.) How often do you use a bicycle as a mode of transportation?` + `8.) How often do you use walking as a mode of transportation?` + `9.) What is your age in years?` + `10.) What is your approximate annual income in Singapore dollars?` + `11.) Do you identify as` + `12.) Which best describes your race/ethnicity?`, data = full_sample, max.xlev = 30, byrow = FALSE, simplify = FALSE) # "simplify = FALSE" is the argument to tell it to still print factor levels with no obs
sample_comparison_table <- createTable(sample_comparison)
export2md(sample_comparison_table, file = 'sample_comparison_table.md', caption = "Group Comparison")
